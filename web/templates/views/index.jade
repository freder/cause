extends ../layouts/default


mixin task(t)
	div(id=t.slug)
		.task-name
			| #{t.name}
			if t.interval
				button(onclick='run_task("#{t.slug}")') run now
		if t.interval
			| interval: #{t.interval}
		.code
			//- textarea.codemirror #{JSON.stringify(t, null, 4)}
		.visualization
			svg


block content
	//- div#console

	canvas#logo

	h1 'cause

	h2 #{tasks.length} tasks
	for t in tasks
		+task(t)


block js
	script(src='/bower_components/d3/d3.min.js')
	script(src='/bower_components/graphlib/dist/graphlib.core.js')
	script(src='/bower_components/dagre/dist/dagre.core.js')
	script(src='/bower_components/dagre-d3/dist/dagre-d3.core.js')

	script(src='/bower_components/socket.io-client/socket.io.js')

	script(src='/bower_components/codemirror/lib/codemirror.js')
	script(src='/bower_components/codemirror/mode/javascript/javascript.js')
	script(src='/bower_components/codemirror/addon/selection/active-line.js')

	script(src='/js/index.js')

	script.
		var tasks = !{tasks_json};
		var websocket_port = !{websocket_port};

	script(src='bower_components/Processing.js/processing.min.js')
	script(src='bower_components/tweenjs/build/tween.min.js')
	script.
		function sketch(p) {
			var w = 500;
			var h = w;
			var radius = w / 3.5;
			var elem_angle = p.radians(35);
			var num_elems = 14;
			var opening_angle = p.radians(70);
			var rect_w = radius / 3.4;
			var rect_h = rect_w * 1.6;
			var opacity = 200;
			// var x_rotation = 0;
			
			var prev_duration;
			var blocks = _.range(num_elems)
				.map(function(index) {
					var duration = 200;
					if (index > 0) {
						duration = 0.975 * prev_duration;
					}
					prev_duration = duration;
					var delay = 500 + index * (duration * 0.55);
					var block = {
						index: index,
						width: rect_w,
						height: 5,
						opacity: 50,
					};
					block.tween = new TWEEN.Tween(block)
						.to({
							height: rect_h,
							opacity: opacity
						}, duration)
						.easing(TWEEN.Easing.Quadratic.In)
						.delay(delay)
						.start();
					return block;
				});

			p.setup = function() {
				p.size(w, h/*, p.OPENGL*/);
				p.rectMode(p.CENTER);
				p.frameRate(30);
			}

			p.draw = function() {
				TWEEN.update(/*time*/);
				p.background(200, 0);

				p.pushMatrix();
				p.translate(w * 0.5, h * 0.5);
				p.rotate(opening_angle * 0.5);

				var angle_step = (p.TWO_PI - opening_angle) / num_elems;

				blocks.forEach(function(block, i) {
					p.rotate(angle_step);
					p.fill(255, 212, 0, block.opacity);
					p.noStroke();
					p.pushMatrix();
						p.translate(radius, 0);
						p.rotate(elem_angle);
						p.translate(0, block.height * 0.5);
						// p.rotateX(x_rotation);
						p.rect(0, 0, block.width, block.height);
					p.popMatrix();	
				});

				p.popMatrix();
			}
		}

		$(document).ready(function() {
			var canvas = document.getElementById('logo');
			var p = new Processing(canvas, sketch);
		});
